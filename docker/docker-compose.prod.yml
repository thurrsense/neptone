services:
  db:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    image: ${IMAGE}
    restart: always
    env_file: .env
    environment:
      DB_HOST: db
      DB_PORT: 5432
      STATIC_ROOT: /app/staticfiles
      MEDIA_ROOT: /app/media
      # дефолты для gunicorn, чтобы точно слушал на всех интерфейсах
      GUNICORN_CMD_ARGS: "--bind 0.0.0.0:8000 --workers 3 --threads 2 --timeout 60 --access-logfile - --error-logfile -"
    depends_on:
      db:
        condition: service_healthy
    working_dir: /app/neptone
    expose:
      - "8000"
    command: >
      sh -exc '
        exec gunicorn neptone.wsgi:application
      '
    volumes:
      - web_static:/app/staticfiles
      - web_media:/app/media
    healthcheck:
      test: ["CMD-SHELL", "python - <<'PY'\nimport socket; s=socket.socket(); s.settimeout(2); s.connect((\"127.0.0.1\",8000)); s.close()\nPY"]
      interval: 10s
      timeout: 3s
      retries: 10

  nginx:
    image: nginx:1.27-alpine
    depends_on:
      web:
        condition: service_healthy
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - web_static:/app/staticfiles:ro
      - web_media:/app/media:ro
    restart: always

volumes:
  db_data:
  web_static:
  web_media:
