services:
  db:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    image: ${IMAGE}
    restart: always
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    working_dir: /app/neptone              # <-- важно (manage.py тут)
    expose:
      - "8000"
    command: >
      sh -c "
        python manage.py migrate --noinput &&
        python manage.py collectstatic --noinput &&
        gunicorn neptone.wsgi:application --bind 0.0.0.0:8000 --workers 3 --threads 2 --timeout 60
      "
    volumes:
      - web_static:/app/staticfiles        # <-- общий том со статикой
      - web_media:/app/media               # <-- общий том с медиа

  nginx:
    image: nginx:1.27-alpine
    depends_on:
      - web
    ports:
      - "8000:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - web_static:/app/staticfiles:ro     # <-- тот же том
      - web_media:/app/media:ro            # <-- тот же том
    restart: always

volumes:
  db_data:
  web_static:
  web_media:
